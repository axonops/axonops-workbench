name: "Linux: Build and Pack (ARM64)"

on:
  workflow_dispatch:

jobs:
  Linux:
    runs-on: [self-hosted, linux, ARM64]

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Switch to ${{ steps.extract_branch.outputs.branch }} branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}

      - name: Setup Python v3.12
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Build binaries for cqlsh and keys_generator
        run: |
          pip install --upgrade pip
          pip install virtualenv
          virtualenv venv

          ./venv/bin/pip3 install -r requirements.txt

          ./venv/bin/pyinstaller --noconfirm --clean --noupx --distpath main/bin --onefile cqlsh/v6.0.0-ACv4.0.7/cqlsh.py -n cqlsh-407
          ./venv/bin/pyinstaller --noconfirm --clean --noupx --distpath main/bin --onefile cqlsh/v6.1.0-ACv4.1.0/cqlsh.py -n cqlsh-410
          ./venv/bin/pyinstaller --noconfirm --clean --noupx --distpath main/bin --onefile keys_generator/keys_generator.py

      - name: Start with AxonOps Developer Workbench
        run: echo ""

      - name: Setup Node.js v16.20.2
        uses: actions/setup-node@v4
        with:
          node-version: 16.20.2

      - name: Install AxonOps Developer Workbench dependencies
        run: |
          npm i

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v2

      - name: Pack AxonOps Developer Workbench for Linux
        run: |
          if [ "$(uname -m)" == "aarch64" ]; then
            sudo apt-get -y install ruby
            sudo gem install dotenv -v 2.8.1
            sudo gem instal fpm
            export USE_SYSTEM_FPM=true
          fi

          npm run deb
          npm run rpm
          npm run snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Debian packages
        uses: actions/upload-artifact@v4
        with:
          name: AxonOps-Developer-Workbench-Linux-arm64.deb
          path: dist/axonops-developer-workbench*.deb

      - name: Upload RedHat packages
        uses: actions/upload-artifact@v4
        with:
          name: AxonOps-Developer-Workbench-Linux-arm64.rpm
          path: dist/axonops-developer-workbench*.rpm

      - name: Upload Snap packages
        uses: actions/upload-artifact@v4
        with:
          name: AxonOps-Developer-Workbench-Linux-arm64.snap
          path: dist/axonops-developer-workbench*.snap

      - name: Upload Tar packages
        uses: actions/upload-artifact@v4
        with:
          name: AxonOps-Developer-Workbench-Linux-arm64.tar.gz
          path: dist/axonops-developer-workbench*.tar.gz
