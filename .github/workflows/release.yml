name: Release Workbench

on:
  release:
    types: [published]

  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build on ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: [self-hosted, linux, X64]
            target: Linux

          # M1
          - os: macos-14
            target: Macos

          # X86
          - os: macos-13
            target: Macos

          - os: windows-latest
            target: Windows

          # - os: "[self-hosted, linux, ARM64]"
          #   target: Linux
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check if package.json has the right version
        run: |
          grep -q "\"version\": \"${{ github.ref_name }}\"" package.json
          if [ $? -ne 0 ]; then
            echo "Error: package.json does not have the right version"
            exit 1
          fi

      - name: Download CQLSH prebuilt binaries from axonops-workbench-cqlsh
        run: |
          mkdir -p main/bin
          for binary in cqlsh-410 cqlsh-407 keys_generator; do
            curl -fL ${CQLSH_GITHUB_URL}/${binary}-$(uname -s)-$(uname -m).tar | tar xf - -C main/bin
            mv main/bin/${binary}-$(uname -s)-$(uname -m) main/bin/${binary}
            mv main/bin/${binary}/${binary}-$(uname -s)-$(uname -m) main/bin/${binary}/${binary}
          done
        env:
          CQLSH_GITHUB_URL: "${{ secrets.CQLSH_GITHUB_URL || 'https://github.com/axonops/axonops-workbench-cqlsh/releases/download/0.6.0' }}"

      - name: Setup Python v3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install python dependencies
        run:  pip3 install -r requirements.txt

      - name: Setup Node.js v16.20.2
        uses: actions/setup-node@v4
        with:
          node-version: 16.20.2

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Get credits and add them to the database
        run: |
          cd get_credits
          npm cache clean --force
          npm i
          npm rebuild
          node get_credits.js
        
      - name: Install AxonOps Developer Workbench dependencies
        run: npm i

      # - name: Install Snapcraft
      #   uses: samuelmeuli/action-snapcraft@v2
      #   if: ${{ runner.os != 'Windows' }}

      - name: Pack AxonOps Developer Workbench for Linux
        run: |
          if [ "$(uname -m)" == "aarch64" ] && [ "$(uname -s)" == "Linux" ]; then
            sudo apt-get -y install ruby
            sudo gem install dotenv -v 2.8.1
            sudo gem instal fpm
            export USE_SYSTEM_FPM=true
          fi

          if [ "$(uname -s )" == "Darwin" ] && [ "$(uname -m)" == "arm64" ]; then
            npm run mac:arm64
          elif [ "$(uname -s )" == "Darwin" ] && [ "$(uname -m)" == "x86_64" ]; then
            npm run mac
          fi
          export CSC_IDENTITY_AUTO_DISCOVERY=false
          if [ "$(uname -s )" == "Linux" ]; then
            npm run linux
          fi
          if [[ "$(uname -s)" =~ "MINGW64" ]]; then
            unset CSC_KEY_PASSWORD
            unset CSC_LINK
            npm run win
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_INSTALLER_KEY_PASSWORD: ${{ secrets.CSC_INSTALLER_KEY_PASSWORD }}
          CSC_INSTALLER_LINK: ${{ secrets.CSC_INSTALLER_LINK }}

      - name: Create checksum files
        run: |
          SAVEIFS=$IFS
          IFS=$(echo -en "\n\b")

          cd dist

          case "$(uname -s)" in
          Darwin)
            FILES=$(ls -1 *.dmg *.zip)
            for f in $FILES; do
              shasum -a 256 $f > ${f}.sha256sum
            done
          ;;
          MINGW64*)
            FILES=$(ls -1 *.exe)
            for f in $FILES; do
              sha256sum $f > ${f}.sha256sum
            done
          ;;
          Linux)
            FILES=$(ls -1 *.tar.gz *.deb *.rpm)
            for f in $FILES; do
              sha256sum $f > ${f}.sha256sum
            done
          ;;
          esac

          IFS=$SAVEIFS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.zip
            dist/*.pkg
            dist/*.dmg
            dist/*.deb
            dist/*.rpm
            dist/*.exe
            dist/*.tar.gz
            dist/*.nsis
            dist/*.sha256sum
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Release choco and brew

  release-brew:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ !cancelled() && (success() || failure() || needs.build.result == 'skipped') }}

    steps:    
      - uses: actions/checkout@v4
        with:
          ref: main
          repository: axonops/homebrew-repository
          path: homebrew
          persist-credentials: true
          fetch-depth: 0
          ssh-key: ${{ secrets.BREW_SSH_KEY }}

      - name: Make changes to Homebrew
        run: |
          set -x
          VERSION=$GITHUB_REF_NAME
          case $VERSION in
            *internal*)
              CONFIG_FILE=Casks/axonopsworkbench-internal.rb
              ;;
            *beta*)
              CONFIG_FILE=Casks/axonopsworkbench-beta.rb
              ;;
            *)
              CONFIG_FILE=Casks/axonopsworkbench.rb
              ;;
          esac
          cd homebrew
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # Get the sha256sum
          SHA_ARM=$(curl -sfL ${GITHUB_URL}/${VERSION}/AxonOps.Workbench-${VERSION}-mac-arm64.zip.sha256sum | awk '{print $1}')
          SHA_AMD=$(curl -sfL ${GITHUB_URL}/${VERSION}/AxonOps.Workbench-${VERSION}-mac-x64.zip.sha256sum | awk '{print $1}')
          # Update versions
          cp $TEMPLATE $CONFIG_FILE
          sed -i "s/%SHA_ARM%/$SHA_ARM/g" $CONFIG_FILE
          sed -i "s/%SHA_AMD%/$SHA_AMD/g" $CONFIG_FILE
          sed -i "s/%VERSION%/${VERSION}/g" $CONFIG_FILE
          git add $CONFIG_FILE
          if [ $(git status --porcelain | wc -l) -eq "0" ]; then
            echo "No changes to commit"
            exit 0
          fi
          git --no-pager diff
          git commit -m "Changes made by GitHub Actions"
          git tag $VERSION
        env:
          GITHUB_URL: https://github.com/axonops/axonops-workbench-cassandra/releases/download/
          TEMPLATE: Casks/axonopsworkbench.rb.tmpl

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: homebrew
          repository: axonops/homebrew-repository
          ssh: true
          tags: true

  release-choco:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ !cancelled() && (success() || failure() || needs.build.result == 'skipped') }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          repository: axonops/chocolatey
          path: chocolatey
          persist-credentials: true
          fetch-depth: 0
          ssh-key: ${{ secrets.CHOCO_SSH_KEY }}

      - name: Make changes to Homebrew
        run: |
          set -x
          VERSION=$GITHUB_REF_NAME
          cd chocolatey
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          # Get the sha256sum
          SHA_AMD=$(curl -sfL ${GITHUB_URL}/${VERSION}/AxonOps.Workbench-${VERSION}-win-x64.exe.sha256sum | awk '{print $1}')
          # Update versions
          cp $TEMPLATE $CONFIG_FILE
          sed -i "s/%SHA_AMD%/$SHA_AMD/g" $CONFIG_FILE
          sed -i "s/%VERSION%/${VERSION}/g" $CONFIG_FILE
          sed -i "s%<version>.*</version>%<version>${VERSION}</version>%g" axonopsworkbench.nuspec
          git add .
          if [ $(git status --porcelain | wc -l) -eq "0" ]; then
            echo "No changes to commit"
            exit 0
          fi
          git --no-pager diff
          git commit -m "Changes made by GitHub Actions"
          git tag $VERSION
        env:
          GITHUB_URL: https://github.com/axonops/axonops-workbench-cassandra/releases/download/
          TEMPLATE: tools/chocolateyinstall.ps1.tmpl
          CONFIG_FILE: tools/chocolateyinstall.ps1

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: chocolatey
          repository: axonops/chocolatey
          ssh: true
          tags: true

  release-debian-redhat:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ !cancelled() && (success() || failure() || needs.build.result == 'skipped') }}

    steps:
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: Push Debian package
        run: |
          curl -sLO "https://github.com/axonops/axonops-workbench-cassandra/releases/download/$GITHUB_REF_NAME/AxonOps.Workbench-$GITHUB_REF_NAME-linux-amd64.deb"
          gcloud config set project axonops-public
          gcloud artifacts apt upload axonops-apt-beta --location=europe --source=AxonOps.Workbench-$GITHUB_REF_NAME-linux-amd64.deb

      - name: Push RedHat package
        run: |
          curl -sLO "https://github.com/axonops/axonops-workbench-cassandra/releases/download/$GITHUB_REF_NAME/AxonOps.Workbench-$GITHUB_REF_NAME-linux-x86_64.rpm"
          gcloud config set project axonops-public
          gcloud artifacts yum upload axonops-yum-beta --location=europe --source=AxonOps.Workbench-$GITHUB_REF_NAME-linux-x86_64.rpm
