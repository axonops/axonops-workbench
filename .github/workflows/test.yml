name: Run Tests

on:
  push:
    branches: [ main, develop, unittests ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.17.0]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm cache clean --force
        npm ci --include=dev

    - name: Run linter
      run: npm run lint
      continue-on-error: true

    - name: Run unit tests
      run: npm run test:ci
      env:
        NODE_ENV: test

    # Skip Codecov upload as it requires proper token setup
    # - name: Upload coverage reports
    #   uses: codecov/codecov-action@v4
    #   if: matrix.os == 'ubuntu-latest'
    #   with:
    #     file: ./coverage/lcov.info
    #     flags: unittests
    #     name: codecov-umbrella

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}
        path: |
          coverage/
          jest-results.json
        retention-days: 30

  test-electron:
    name: Electron Integration Tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.17.0]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Linux specific setup
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb

    - name: Install dependencies
      run: |
        npm cache clean --force
        npm ci --include=dev

    - name: Rebuild native modules
      run: npm run rebuild

    # Run tests with xvfb on Linux
    - name: Run tests (Linux)
      if: runner.os == 'Linux'
      run: xvfb-run -a npm run test:ci
      env:
        NODE_ENV: test
        ELECTRON_IS_TEST: 1

    # Run tests normally on Windows and macOS
    - name: Run tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: npm run test:ci
      env:
        NODE_ENV: test
        ELECTRON_IS_TEST: 1

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test, test-electron]
    if: always()

    steps:
    - name: Check test results
      run: |
        if [ "${{ needs.test.result }}" != "success" ] || [ "${{ needs.test-electron.result }}" != "success" ]; then
          echo "Tests failed!"
          exit 1
        fi
        echo "All tests passed!"