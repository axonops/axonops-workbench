/**
 * Module to set the appropriate `logging` add function for the main thread
 * It's mainly used with modules that are common between both the main and renderer threads
 *
 * Import Node.js path module
 * Working with file and directory paths, and providing useful utilities
 */
const Path = require('path'),
  // Import the constants module
  Consts = require(Path.join(__dirname, '..', '..', 'custom_node_modules', 'main', 'consts'))

// Define the final result which be exported
let finalAddLog = null

try {
  // If the `add Log` function is defined then this module has been imported within the renderer thread and no need for custom events
  if (typeof addLog != "undefined") {
    finalAddLog = addLog

    // Skip this try-catch block
    throw 0
  }

  /**
   * Import Node.js events module
   * Used for creating and handling custom events
   */
  EventEmitter = require('events')

  // Create an instance from the module's class
  let eventEmitter = new EventEmitter()

  /**
   * Define the customized `add` log function
   * The new function will emit a custom event `logging:add` and the result is the same as calling `addLog` in the renderer thread
   */
  finalAddLog = (log, type) => eventEmitter.emit('logging:add', '', {
    date: new Date().getTime(),
    log,
    type
  })
} catch (e) {}

module.exports = {
  addLog: finalAddLog
}
